Release: Ninja
Version: warrior-3.4.0

===================
1: Release details
===================
This is release Ninja of Warrior Test Automation Framework

-------------------------------
1.1: List of available releases
-------------------------------

1. Ninja = warrior-3.1.0 to current


==================
2. Version Details
==================
You are on Release Ninja, Version warrior-3.4.0 of Warrior Framework.
Procedure to get a specific version is available in section-3 of this document.

+++++++++++++++++++++++++++++++++
2.1. Change log for this release
+++++++++++++++++++++++++++++++++


-------------
New Features:
-------------
[WAR-724] - Selenium KWs: Test if all the available selenium functionality in Warrior is compatible with Selenium 3.0
[WAR-1003] - As a user, I want to know he python version on which Warrior is running
[WAR-1053] - As a user, I want to be able to run Suites in a project in parallel
[WAR-1069] - Selenium: As a user, I want to launch browser and maximize it in the same keyword
[WAR-851] - WARHORN: As a user, I need an option to create virtual environment

-------------
Improvements:
-------------
[WAR-1340] - User should able open the test case maped in the test suit by clicking on the test case name(need hyperlink support)
[WAR-1389] - travis pylint failure for using print in war_print_class has to be ignored
[WAR-1405] - Travis: Ignore deleted files for pylint check
[WAR-1426] - Resolve issues with Regression test
[WAR-1142] - Move hardcoded url in warrior_cli_driver to w_settings

---------
Bugfixes:
---------
[WAR-1141] - selenium:not able to launch the browser with url if it is not the part of world wide web
[WAR-1356] - Modify send_command(cli) utility to support both pexpect and WarriorConnect objects


=================================================
3. Procedure to get a specific version of Warrior
=================================================

1. Clone warriorframework

$ git clone https://github.com/warriorframework/warriorframework.git

2. go to warriorframework directory

$cd warriorframework

3. To check the list of versions available, execute "git tag --list" command

$ git tag --list
warior-3.1.0
warior-3.1.1
warior-3.2.0
warior-3.3.0
$

3. To Check the current version you are at, execute "git branch" command

$ git branch
* master
$

- * indicates the active version.
- In the above example master is the active version.
- If the active version is master it means you are not using a standard release version of warrior framework and hence it may
not be a stable tested version.

4. To switch to a specific version from master, execute 'git checkout <version_name>' command.

$ git checkout warrior-3.3.0
Note: checking out 'warrior-3.3.0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

git checkout -b <new-branch-name>

HEAD is now at 146313d... reduce command timeout, wait after timeout=60
$

5. Execute git branch command to verify the active version.

$ git branch
* (HEAD detached at warrior-3.3.0)
master
$

- * indicates the active version.

6. Switch from one version to another (current=warrior-3.3.0, switch to warrior-3.2.0)

$ git checkout warrior-3.2.0
Previous HEAD position was 146313d... reduce command timeout, wait after timeout=60
HEAD is now at ecb6373... WAR-180, handle nd prompt on timeout
$
$ git branch
* (HEAD detached at warrior-3.2.0)
master
$

7. Switch to master branch again.

$ git checkout master
Previous HEAD position was ecb6373... WAR-180, handle nd prompt on timeout
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
$
$
$ git branch
* master
$
